- name: Pull Docker images and run containers for frontend, backend, and Redis
  hosts: localhost
  connection: local
  become: true
  tasks:
    - name: Set default values if variables are not defined
      set_fact:
        BACKEND_IMAGE: "{{ BACKEND_IMAGE | default('ghcr.io/paulscherrerinstitute/data_board_backend') }}"
        FRONTEND_IMAGE: "{{ FRONTEND_IMAGE | default('ghcr.io/paulscherrerinstitute/data_board_frontend') }}"
        REDIS_IMAGE: "{{ REDIS_IMAGE | default('redis') }}"
        BACKEND_PORT: "{{ BACKEND_PORT | default(8080) }}"
        BACKEND_HOST: "{{ BACKEND_HOST | default('http://' + ansible_default_ipv4.address) }}"
        FRONTEND_PORT: "{{ FRONTEND_PORT | default(80) }}"
        REDIS_PORT: "{{ REDIS_PORT | default(6379) }}"

    - name: Create Docker network
      docker_network:
        name: data_board_network
        driver: bridge

    - name: Pull Docker image for Redis from registry
      docker_image:
        name: "{{ REDIS_IMAGE }}"
        source: pull

    - name: Run Docker container for Redis with custom config inline
      docker_container:
        name: data_board_redis
        image: "{{ REDIS_IMAGE }}"
        state: started
        restart_policy: unless-stopped
        ports:
          - "{{ REDIS_PORT }}:6379"
        detach: true
        image_name_mismatch: recreate
        command: ["redis-server", "--save", '""', "--appendonly", "no"]

    - name: Add Redis container to Docker network
      docker_network:
        name: data_board_network
        connected:
          - data_board_redis
        appends: yes

    - name: Pull Docker image for backend from registry
      docker_image:
        name: "{{ BACKEND_IMAGE }}"
        source: pull

    - name: Run Docker container for backend
      docker_container:
        name: data_board_backend
        image: "{{ BACKEND_IMAGE }}"
        state: started
        restart_policy: unless-stopped
        ports:
          - "{{ BACKEND_PORT }}:8080"
        detach: true
        env:
          REDIS_HOST: "data_board_redis"
          REDIS_PORT: "{{ REDIS_PORT }}"
        image_name_mismatch: recreate

    - name: Add backend container to Docker network
      docker_network:
        name: data_board_network
        connected:
          - data_board_backend
        appends: yes

    - name: Pull Docker image for frontend from registry
      docker_image:
        name: "{{ FRONTEND_IMAGE }}"
        source: pull

    - name: Run Docker container for frontend
      docker_container:
        name: data_board_frontend
        image: "{{ FRONTEND_IMAGE }}"
        state: started
        restart_policy: unless-stopped
        ports:
          - "{{ FRONTEND_PORT }}:80"
        detach: true
        env:
          DATA_BOARD_PUBLIC_BACKEND_URL: "{{ BACKEND_HOST }}:{{ BACKEND_PORT }}"
        image_name_mismatch: recreate

    - name: Add frontend container to Docker network
      docker_network:
        name: data_board_network
        connected:
          - data_board_frontend
        appends: yes
