- name: Pull Docker images and run containers for frontend, backend, and MongoDB
  hosts: localhost
  connection: local
  become: true
  tasks:
    - name: Set default values if variables are not defined
      set_fact:
        BACKEND_IMAGE: "{{ BACKEND_IMAGE | default('ghcr.io/paulscherrerinstitute/data_board_backend') }}"
        FRONTEND_IMAGE: "{{ FRONTEND_IMAGE | default('ghcr.io/paulscherrerinstitute/data_board_frontend') }}"
        MONGO_IMAGE: "{{ MONGO_IMAGE | default('mongo') }}"
        BACKEND_PORT: "{{ BACKEND_PORT | default(8080) }}"
        BACKEND_HOST: "{{ BACKEND_HOST | default('http://' + ansible_default_ipv4.address) }}"
        FRONTEND_PORT: "{{ FRONTEND_PORT | default(80) }}"
        MONGO_PORT: "{{ MONGO_PORT | default(27017) }}"
        MONGO_DB_NAME: "{{ MONGO_DB_NAME | default('databoard') }}"

    - name: Create Docker network
      docker_network:
        name: data_board_network
        driver: bridge

    - name: Pull Docker image for MongoDB from registry
      docker_image:
        name: "{{ MONGO_IMAGE }}"
        source: pull

    - name: Run Docker container for MongoDB with custom config inline
      docker_container:
        name: data_board_mongo
        image: "{{ MONGO_IMAGE }}"
        state: started
        restart_policy: unless-stopped
        ports:
          - "{{ MONGO_PORT }}:27017"
        detach: true
        image_name_mismatch: recreate
        env:
          MONGO_INITDB_DATABASE: "{{ MONGO_DB_NAME }}"

    - name: Add MongoDB container to Docker network
      docker_network:
        name: data_board_network
        connected:
          - data_board_mongo
        appends: yes

    - name: Pull Docker image for backend from registry
      docker_image:
        name: "{{ BACKEND_IMAGE }}"
        source: pull

    - name: Run Docker container for backend
      docker_container:
        name: data_board_backend
        image: "{{ BACKEND_IMAGE }}"
        state: started
        restart_policy: unless-stopped
        ports:
          - "{{ BACKEND_PORT }}:8080"
        detach: true
        env:
          MONGO_HOST: "data_board_mongo"
          MONGO_PORT: "{{ MONGO_PORT }}"
          SCHEMA_PATH: "{{ SCHEMA_PATH | default(omit) }}"

        image_name_mismatch: recreate

    - name: Add backend container to Docker network
      docker_network:
        name: data_board_network
        connected:
          - data_board_backend
        appends: yes

    - name: Pull Docker image for frontend from registry
      docker_image:
        name: "{{ FRONTEND_IMAGE }}"
        source: pull

    - name: Run Docker container for frontend
      docker_container:
        name: data_board_frontend
        image: "{{ FRONTEND_IMAGE }}"
        state: started
        restart_policy: unless-stopped
        ports:
          - "{{ FRONTEND_PORT }}:80"
        detach: true
        env:
          DATA_BOARD_PUBLIC_BACKEND_URL: "{{ BACKEND_HOST }}:{{ BACKEND_PORT }}"
        image_name_mismatch: recreate

    - name: Add frontend container to Docker network
      docker_network:
        name: data_board_network
        connected:
          - data_board_frontend
        appends: yes
